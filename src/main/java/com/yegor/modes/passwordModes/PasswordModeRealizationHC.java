package com.yegor.modes.passwordModes;

import com.yegor.interfaces.PasswordMode;

/**
 * This class defines a password for archive
 *
 * @author Yegor Kostochka
 * @version 1.0
 */
public class PasswordModeRealizationHC implements PasswordMode {
    /**
     * General password for archive. It consist of user password and password
     * generated by program (password for memcached).
     */
    private String password;

    /**
     * This password stores to memcached. It is the part of the general password (password).
     */
    private String secondPartOfPassword;

    /**
     * @return general password for archive
     */
    public String getPassword() {
        return password;
    }

    /**
     * Method generates general password (password). It must call method setPswToMwmcached().
     * @param userPsw user password
     */
    public void setPassword(String userPsw) {
        setSecondPartOfPassword(userPsw);
        password = userPsw + getSecondPartOfPassword();
    }

    /**
     * @return password stored to memcached
     */
    public String getSecondPartOfPassword() {
        return secondPartOfPassword;
    }

    /**
     * Method generate password (part of general password) and stores it to memcached.
     * @param secondPartOfPsw parameter for generate <i>secondPartOfPsw</i> password
     */
    public void setSecondPartOfPassword(String secondPartOfPsw) {
        this.secondPartOfPassword = Integer.toString(secondPartOfPsw.hashCode());
    }
}
